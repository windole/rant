@import './var.less';

:root {
  --rc-switch-size: @switch-size;
  --rc-switch-width: @switch-width;
  --rc-switch-height: @switch-height;
  --rc-switch-node-size: @switch-node-size;
  --rc-switch-node-background-color: @switch-node-background-color;
  --rc-switch-node-box-shadow: @switch-node-box-shadow;
  --rc-switch-background-color: @switch-background-color;
  --rc-switch-on-background-color: @switch-on-background-color;
  --rc-switch-transition-duration: @switch-transition-duration;
  --rc-switch-disabled-opacity: @switch-disabled-opacity;
  --rc-switch-border: @switch-border;
}

.@{rc-prefix}-switch {
  position: relative;
  display: inline-block;
  box-sizing: content-box;
  width: var(--rc-switch-width);
  height: var(--rc-switch-height);
  font-size: var(--rc-switch-size);
  background-color: var(--rc-switch-background-color);
  border: var(--rc-switch-border);
  border-radius: var(--rc-switch-node-size);
  cursor: pointer;
  transition: background-color var(--rc-switch-transition-duration);

  &__node {
    position: absolute;
    top: 0;
    left: 0;
    width: var(--rc-switch-node-size);
    height: var(--rc-switch-node-size);
    background-color: var(--rc-switch-node-background-color);
    border-radius: 100%;
    box-shadow: var(--rc-switch-node-box-shadow);
    transition: transform var(--rc-switch-transition-duration) cubic-bezier(0.3, 1.05, 0.4, 1.05);
  }

  &__loading {
    top: 25%;
    left: 25%;
    width: 50%;
    height: 50%;
    line-height: 1;
  }

  &--on {
    background-color: var(--rc-switch-on-background-color);

    .@{rc-prefix}-switch__node {
      transform: translateX(calc(var(--rc-switch-width) - var(--rc-switch-node-size)));
    }

    .@{rc-prefix}-switch__loading {
      color: var(--rc-switch-on-background-color);
    }
  }

  &--disabled {
    cursor: not-allowed;
    opacity: var(--rc-switch-disabled-opacity);
  }

  &--loading {
    cursor: default;
  }
}
